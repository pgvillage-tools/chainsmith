name: CI run on PR
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

env:
  # Golang version to use across CI steps
  GOLANG_VERSION: '1.24' # As we have go toolchain 1.23 specified in go.mod

permissions:
  contents: read

jobs:
  codechanges:
    if: ${{ github.event.pull_request.draft == false }}
    runs-on: ubuntu-22.04
    outputs:
      backend: ${{ steps.filter.outputs.backend_any_changed }}
    steps:
      - uses: actions/checkout@8410ad0602e1e429cee44a835ae9f77f654a6694 # v4.0.0
      - uses: tj-actions/changed-files@24d32ffd492484c1d75e0c0b894501ddb9d30d62 # v47.0.0
        id: filter
        with:
          # Any file which is not under docs/ or is not a markdown file is counted as a backend file
          files_yaml: |
            backend:
              - go.mod
              - go.sum
              - '**.go'
              - '.github/workflows/ci-build.yaml'

  check-go:
    name: Ensure Go modules synchronicity
    runs-on: ubuntu-22.04
    if: ${{ needs.codechanges.outputs.backend == 'true' && github.event.pull_request.draft == false}}
    needs:
      - codechanges
    steps:
      - name: Checkout code
        uses: actions/checkout@8410ad0602e1e429cee44a835ae9f77f654a6694 # v4.0.0
      - name: Setup Golang
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version: ${{ env.GOLANG_VERSION }}
      - name: Download all Go modules
        run: |
          go mod download
      - name: Check for tidiness of go.mod and go.sum
        run: |
          go mod tidy
          git diff --exit-code -- .

  lint-go:
    name: Lint Go code
    runs-on: ubuntu-22.04
    if: ${{ needs.codechanges.outputs.backend == 'true' && github.event.pull_request.draft == false}}
    needs:
      - codechanges
    permissions:
      contents: read # for actions/checkout to fetch code
      pull-requests: read # for golangci/golangci-lint-action to fetch pull requests
    steps:
      - name: Checkout code
        uses: actions/checkout@8410ad0602e1e429cee44a835ae9f77f654a6694 # v4.0.0
      - name: Setup Golang
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version: ${{ env.GOLANG_VERSION }}
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@aaa42aa0628b4ae2578232a66b541047968fac86 # v6.1.0
        with:
          version: v1.64.8
          args: --verbose

  unittests:
    name: Run unittests
    runs-on: ubuntu-22.04
    if: ${{ needs.codechanges.outputs.backend == 'true' && github.event.pull_request.draft == false}}
    needs:
      - codechanges
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Golang
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version: ${{ env.GOLANG_VERSION }}
      - name: Integration tests
        run: |
          make check-coverage
